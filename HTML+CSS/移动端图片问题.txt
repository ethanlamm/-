由于视网膜屏的出现，在移动端上显示的图片与在开发中放入的图片有倍数关系。

比如ipone 8，最终会放大2倍。

为了让图片不模糊，则在开发时，放入的图片则比实际需要的要大2倍。
该图片为在准备材料时准备好。
例：实际需要一张50px X 50px 的图片，则原图应该准备为100px X 100px

原则：根据放大的倍数，以给定盒子的大小乘以倍数，则为应该准备的原图的大小；然后再将原图缩放成盒子的大小，先缩放后再放大，则最终以原图(原尺寸)的形式呈现。

简述：有一个主动缩小的动作！

1.普通图片 --- 一张图片铺满盒子(无其他内容)
1）设定一个50px X 50px的div
2）将100px X 100px的原图放入
3）将100px X 100px的原图缩放大小为50px X 50px

●背景图和插入图片调节大小的方式不同：
a.背景图：  background-size: 100% 100%;
即将准备好的原图缩放成盒子的大小，实际也是缩小了背景图

b.插入图片：width:100%; height:100% ; 实际目的相同

4）此时，在移动端会将图片放大2倍，则变成100px X 100px
5）那么，这张100px X 100px的图片则以原图(原尺寸)的形式呈现，不会变模糊


2.精灵图 ---- 一张图片中有很多图片，而实际需要的仅为其中一张
原则：先主动缩小
由于精灵图一整张图片中有很多图片，若缩放为盒子的大小，则盒子中就显示了一整张图，并不是其中一张。
所以应该将精灵图按放大的倍数去缩小，然后再background-position: -X -Y 去调节想要的图片到盒子中。
例：div{ 
	width:20px; 
	height:20px;
	background: url(images/精灵图.png) -X -Y;  (此时的X/Y是精灵图缩小后再测量到的值)
	background-size: 50%;     (缩小为自己一半)
	或者写成盒子的大小：background-size: 20px 20px;
	(其实是精灵图缩小到自己的一半，刚好为盒子的大小)
	}

